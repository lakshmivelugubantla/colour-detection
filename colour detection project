# In[1]:


pip install opencv-python numpy pandas


# In[2]:


import cv2
import pandas as pd


# In[3]:


img_path = 'sample.jpg'
csv_path = 'colors.csv'


# In[4]:


index = ['color', 'color_name', 'hex', 'R','G','B']
df = pd.read_csv(csv_path, names=index, header=None)


# In[5]:


index = ['color', 'color_name', 'hex', 'R','G','B']
df = pd.read_csv(csv_path, names=index, header=None)


# In[6]:


df.head()


# In[7]:


df.shape


# In[8]:


img = cv2.imread(img_path)
img = cv2.resize(img, (800,600))


# In[9]:


clicked = False
r = g = b = xpos = ypos = 0


# In[10]:


def get_color_name(R,G,B):
    minimum = 1000
    for i in range(len(df)):
        d = abs(R - int(df.loc[i,'R'])) + abs(G - int(df.loc[i,'G'])) + abs(B - int(df.loc[i,'B']))
        if d <= minimum:
            minimum = d
            cname = df.loc[i,'color_name']
            
    return cname


# In[11]:


def draw_function(event, x, y, flags, params):
    if event == cv2.EVENT_LBUTTONDBLCLK:
        global b, g, r, xpos, ypos, clicked
        clicked = True
        xpos=x
        ypos=y
        b,g,r = img[y,x]
        b = int(b)
        g = int(g)
        r = int(r)


# In[12]:


cv2.namedWindow('sample')
cv2.setMouseCallback('sample', draw_function)


# In[ ]:


while True:
    cv2.imshow('sample', img)
    if clicked:
        cv2.rectangle(img, (20,20), (600,60), (b,g,r), -1)
        text = get_color_name(r,g,b) + 'R='  + str(r) + 'G=' + str(g) + 'B=' + str(b)
        cv2.putText(img, text, (50,50), 2,0.8, (255,255,255),2,cv2.LINE_AA)
        
        if r+g+b >=600:
            cv2.putText(img, text, (50,50), 2,0.8, (0,0,0),2,cv2.LINE_AA)
            
        clicked = False
            
    if cv2.waitKey(20) & 0xFF == 27:
        break
        
        
cv2.destroyAllWindows()
